}
return(PL.out)
}
PPP.convert <- function(PL,povcal.PPP,WDI.PPP){
if(!is.na(povcal.PPP)){
PL.out <- PL/povcal.PPP
} else {
PL.out <- PL/WDI.PPP
}
return(PL.out)
}
i <- 1
for (i in 1:nrow(data)){
PL[i,5] <- normalise.FPL.calories(data[i,5],data[i,7])
PL[i,5] <- fcpi.deflate(PL[i,5],data[i,8],data[i,11],data[i,10],data[i,9])
PL[i,6] <- PPP.convert(PL[i,5],data[i,13],data[i,12])
PL[i,7] <- normalise.NPL.calories(data[i,6],data[i,5],data[i,7])
PL[i,7] <- cpi.deflate(PL[i,7],data[i,11],data[i,10],data[i,9])
PL[i,8] <- PPP.convert(PL[i,7],data[i,13],data[i,12])
}
names(PL)[5] <- "FPL.2011LCU"
names(PL)[6] <- "FPL.2011PPP"
names(PL)[7] <- "NPL.2011LCU"
names(PL)[8] <- "NPL.2011PPP"
FPL <- PL[,c(2,6)]
FPL <- FPL[complete.cases(FPL),]
write.csv(PL,"PLs.csv",row.names=F)
#Query Povcal with FPL(PPP) set as PL. There is a more efficient way of doing this (multiple countries and poverty lines per query), but the API doesn't seem to be able to handle it
povcal.out.PPP <- function(country,year="all",PL){
param <- paste0("RefYears=",year,"&PovertyLine=",PL,"&C0=",country)
url <- paste0("http://iresearch.worldbank.org/PovcalNet/PovcalNetAPI.ashx?",param,"&display=c")
return(read.csv(url,header=T))
}
i <- 1
FP.list <- list()
for (i in 1:nrow(FPL)){
FP.list[[i]] <- povcal.out.PPP(FPL[i,1],year="all",PL=FPL[i,2])
}
FP.povcal.PPP <- rbindlist(FP.list)
#Query Povcal with FPL(LCU) set as PPP. This gives equivalent results to above.
povcal.out.FPL <- function(country,year="all",PL=2,PPP){
param <- paste0("RefYears=",year,"&PovertyLine=",PL,"&C0=",country,"&PPP0=",PPP)
url <- paste0("http://iresearch.worldbank.org/PovcalNet/PovcalNetAPI.ashx?",param,"&display=c")
return(read.csv(url,header=T))
}
i <- 1
FP.list <- list()
for (i in 1:nrow(PL)){
FP.list[[i]] <- povcal.out.FPL(PL[i,2],year="all",PL=1,PL[i,5])
}
FP.povcal.FPL <- rbindlist(FP.list)
#Calculate national consumption floors based on food poverty lines, both in PPP dollar terms and FPL terms
FP.floors.PPP <- FP.povcal.PPP[,c(4,3,6,7,9,11,13,14,15)]
FP.floors.PPP[which(FP.floors.PPP$CoverageType=="R")]$CountryName <- paste0(FP.floors.PPP[which(FP.floors.PPP$CoverageType=="R")]$CountryName,"--Rural")
FP.floors.PPP[which(FP.floors.PPP$CoverageType=="U")]$CountryName <- paste0(FP.floors.PPP[which(FP.floors.PPP$CoverageType=="U")]$CountryName,"--Urban")
FP.floors.PPP$floor <- FP.floors.PPP$PovertyLine*(1-FP.floors.PPP$PovGapSqr/FP.floors.PPP$PovGap)
FP.floors.PPP <- FP.floors.PPP[,c(1,4,5,10)]
FP.floors.FPL <- FP.povcal.FPL[,c(4,3,6,7,9,11,13,14,15)]
FP.floors.FPL[which(FP.floors.FPL$CoverageType=="R")]$CountryName <- paste0(FP.floors.FPL[which(FP.floors.FPL$CoverageType=="R")]$CountryName,"--Rural")
FP.floors.FPL[which(FP.floors.FPL$CoverageType=="U")]$CountryName <- paste0(FP.floors.FPL[which(FP.floors.FPL$CoverageType=="U")]$CountryName,"--Urban")
FP.floors.FPL$floor <- FP.floors.FPL$PovertyLine*(1-FP.floors.FPL$PovGapSqr/FP.floors.FPL$PovGap)
FP.floors.FPL <- FP.floors.FPL[,c(1,4,5,10)]
FP.floors.FPL$floor.cal <- FP.floors.FPL$floor*2100
FP.floors.FPL.agg <- FP.povcal.FPL[,c(6,7,14,15,21)]
#FP.floors.FPL.agg <- FP.floors.FPL.agg[which(FP.floors.FPL.agg$CoverageType != "A")]
FP.floors.FPL.agg$PovGap.Pop <- FP.floors.FPL.agg$PovGap*FP.floors.FPL.agg$ReqYearPopulation
FP.floors.FPL.agg$PovGapSqr.Pop <- FP.floors.FPL.agg$PovGapSqr*FP.floors.FPL.agg$ReqYearPopulation
FP.floors.FPL.agg <- FP.floors.FPL.agg[,c(2,5,6,7)]
FP.floors.FPL.agg[which(FP.floors.FPL.agg$PovGap.Pop==0)]$ReqYearPopulation <- 0
FP.floors.FPL.agg <- aggregate(FP.floors.FPL.agg, by=list(FP.floors.FPL.agg$RequestYear),FUN=sum)
FP.floors.FPL.agg$PovGap <- FP.floors.FPL.agg$PovGap.Pop/FP.floors.FPL.agg$ReqYearPopulation
FP.floors.FPL.agg$PovGapSqr <- FP.floors.FPL.agg$PovGapSqr.Pop/FP.floors.FPL.agg$ReqYearPopulation
FP.floors.FPL.agg <- FP.floors.FPL.agg[,c(1,6,7)]
FP.floors.FPL.agg$floor <- 1-FP.floors.FPL.agg$PovGapSqr/FP.floors.FPL.agg$PovGap
FP.floors.FPL.agg$floor.cal <- FP.floors.FPL.agg$floor*2100
FP.floors.FPL.agg.ex.chn <- FP.povcal.FPL[,c(4,6,7,14,15,21)]
FP.floors.FPL.agg.ex.chn <- FP.floors.FPL.agg.ex.chn[which(FP.floors.FPL.agg.ex.chn$CountryName != "China")]
FP.floors.FPL.agg.ex.chn$PovGap.Pop <- FP.floors.FPL.agg.ex.chn$PovGap*FP.floors.FPL.agg.ex.chn$ReqYearPopulation
FP.floors.FPL.agg.ex.chn$PovGapSqr.Pop <- FP.floors.FPL.agg.ex.chn$PovGapSqr*FP.floors.FPL.agg.ex.chn$ReqYearPopulation
FP.floors.FPL.agg.ex.chn <- FP.floors.FPL.agg.ex.chn[,c(3,6,7,8)]
FP.floors.FPL.agg.ex.chn[which(FP.floors.FPL.agg.ex.chn$PovGap.Pop==0)]$ReqYearPopulation <- 0
FP.floors.FPL.agg.ex.chn <- aggregate(FP.floors.FPL.agg.ex.chn, by=list(FP.floors.FPL.agg.ex.chn$RequestYear),FUN=sum)
FP.floors.FPL.agg.ex.chn$PovGap <- FP.floors.FPL.agg.ex.chn$PovGap.Pop/FP.floors.FPL.agg.ex.chn$ReqYearPopulation
FP.floors.FPL.agg.ex.chn$PovGapSqr <- FP.floors.FPL.agg.ex.chn$PovGapSqr.Pop/FP.floors.FPL.agg.ex.chn$ReqYearPopulation
FP.floors.FPL.agg.ex.chn <- FP.floors.FPL.agg.ex.chn[,c(1,6,7)]
FP.floors.FPL.agg.ex.chn$floor <- 1-FP.floors.FPL.agg.ex.chn$PovGapSqr/FP.floors.FPL.agg.ex.chn$PovGap
FP.floors.FPL.agg.ex.chn$floor.cal <- FP.floors.FPL.agg.ex.chn$floor*2100
#Calculate kernel densities
FPL.kernel <- as.data.frame(cbind(density(PL$FPL.2011PPP, adjust=1, kernel="g", na.rm=T)$x, density(PL$FPL.2011PPP, adjust=1, kernel="g", na.rm=T)$y))
NPL.kernel <- as.data.frame(cbind(density(PL$NPL.2011PPP, adjust=1, kernel="g", na.rm=T)$x, density(PL$NPL.2011PPP, adjust=1, kernel="g", na.rm=T)$y))
Floor.FPL.kernel <- as.data.frame(cbind(density(FP.floors.FPL$floor.cal, adjust=1, kernel="g", na.rm=T)$x, density(FP.floors.FPL$floor.cal, adjust=1, kernel="g", na.rm=T)$y))
FPL.kernel.plot <- ggplot(subset(PL,Income.group != "High income")) +
geom_density(aes(FPL.2011PPP,col=Income.group,fill=Income.group,alpha=I(0.5)),adjust=1, kernel="g", na.rm=T)
ggsave("FPL.kernel.plot.png", FPL.kernel.plot)
NPL.kernel.plot <- ggplot(subset(PL,Income.group != "High income")) +
geom_density(aes(NPL.2011PPP,col=Income.group,fill=Income.group,alpha=I(0.5)),adjust=1,kernel="g", na.rm=T)
ggsave("NPL.kernel.plot.png", NPL.kernel.plot)
Floor.FPL.kernel.plot <- ggplot(subset(FP.floors.FPL,RequestYear==2015|RequestYear==1981)) +
geom_density(aes(floor.cal,col=as.character(RequestYear),fill=as.character(RequestYear),alpha=I(0.5)),adjust=1, kernel="g", na.rm=T)
ggsave("Floor.FPL.kernel.plot.png", Floor.FPL.kernel.plot)
rm(FP.list,CPI,CPI.2011,FAO.CPI,FAO.CPI.mean,FAO.CPI.melt,FCPI,FCPI.2011,Povcal.CPI,Povcal.CPI.melt,Povcal.PPP,WDI.CPI,WDI.ISO,WDI.PPP,Povcal.CPI.melt.IDN,Povcal.CPI.melt.IDN.R,Povcal.CPI.melt.IDN.U)
View(FP.povcal.FPL)
View(FP.povcal.PPP)
povcal.out.FPL <- function(country,year="all",PL=1,PPP){
param <- paste0("RefYears=",year,"&PovertyLine=",PL,"&C0=",country,"&PPP0=",PPP)
url <- paste0("http://iresearch.worldbank.org/PovcalNet/PovcalNetAPI.ashx?",param,"&display=c")
return(read.csv(url,header=T))
}
i <- 1
FP.list <- list()
for (i in 1:nrow(PL)){
FP.list[[i]] <- povcal.out.FPL(PL[i,2],year="all",PL=2,PL[i,5])
}
FP.povcal.FPL <- rbindlist(FP.list)
View(FP.povcal.FPL)
FP.floors.FPL <- FP.povcal.FPL[,c(4,3,6,7,9,11,13,14,15)]
FP.floors.FPL[which(FP.floors.FPL$CoverageType=="R")]$CountryName <- paste0(FP.floors.FPL[which(FP.floors.FPL$CoverageType=="R")]$CountryName,"--Rural")
FP.floors.FPL[which(FP.floors.FPL$CoverageType=="U")]$CountryName <- paste0(FP.floors.FPL[which(FP.floors.FPL$CoverageType=="U")]$CountryName,"--Urban")
FP.floors.FPL$floor <- FP.floors.FPL$PovertyLine*(1-FP.floors.FPL$PovGapSqr/FP.floors.FPL$PovGap)
FP.floors.FPL <- FP.floors.FPL[,c(1,4,5,10)]
View(FP.floors.FPL)
FP.floors.FPL$floor.cal <- FP.floors.FPL$floor*2100
FP.floors.FPL.agg <- FP.povcal.FPL[,c(6,7,14,15,21)]
#FP.floors.FPL.agg <- FP.floors.FPL.agg[which(FP.floors.FPL.agg$CoverageType != "A")]
FP.floors.FPL.agg$PovGap.Pop <- FP.floors.FPL.agg$PovGap*FP.floors.FPL.agg$ReqYearPopulation
FP.floors.FPL.agg$PovGapSqr.Pop <- FP.floors.FPL.agg$PovGapSqr*FP.floors.FPL.agg$ReqYearPopulation
FP.floors.FPL.agg <- FP.floors.FPL.agg[,c(2,5,6,7)]
FP.floors.FPL.agg[which(FP.floors.FPL.agg$PovGap.Pop==0)]$ReqYearPopulation <- 0
FP.floors.FPL.agg <- aggregate(FP.floors.FPL.agg, by=list(FP.floors.FPL.agg$RequestYear),FUN=sum)
FP.floors.FPL.agg$PovGap <- FP.floors.FPL.agg$PovGap.Pop/FP.floors.FPL.agg$ReqYearPopulation
FP.floors.FPL.agg$PovGapSqr <- FP.floors.FPL.agg$PovGapSqr.Pop/FP.floors.FPL.agg$ReqYearPopulation
FP.floors.FPL.agg <- FP.floors.FPL.agg[,c(1,6,7)]
FP.floors.FPL.agg$floor <- 1-FP.floors.FPL.agg$PovGapSqr/FP.floors.FPL.agg$PovGap
FP.floors.FPL.agg$floor.cal <- FP.floors.FPL.agg$floor*2100
View(FP.floors.FPL.agg)
View(FP.floors.PPP)
i <- 1
FP.list <- list()
for (i in 1:nrow(PL)){
FP.list[[i]] <- povcal.out.FPL(PL[i,2],year="all",PL=1,PL[i,5])
}
FP.povcal.FPL <- rbindlist(FP.list)
FP.floors.FPL <- FP.povcal.FPL[,c(4,3,6,7,9,11,13,14,15)]
FP.floors.FPL[which(FP.floors.FPL$CoverageType=="R")]$CountryName <- paste0(FP.floors.FPL[which(FP.floors.FPL$CoverageType=="R")]$CountryName,"--Rural")
FP.floors.FPL[which(FP.floors.FPL$CoverageType=="U")]$CountryName <- paste0(FP.floors.FPL[which(FP.floors.FPL$CoverageType=="U")]$CountryName,"--Urban")
FP.floors.FPL$floor <- FP.floors.FPL$PovertyLine*(1-FP.floors.FPL$PovGapSqr/FP.floors.FPL$PovGap)
FP.floors.FPL <- FP.floors.FPL[,c(1,4,5,10)]
FP.floors.FPL$floor.cal <- FP.floors.FPL$floor*2100
FP.floors.FPL.agg <- FP.povcal.FPL[,c(6,7,14,15,21)]
#FP.floors.FPL.agg <- FP.floors.FPL.agg[which(FP.floors.FPL.agg$CoverageType != "A")]
FP.floors.FPL.agg$PovGap.Pop <- FP.floors.FPL.agg$PovGap*FP.floors.FPL.agg$ReqYearPopulation
FP.floors.FPL.agg$PovGapSqr.Pop <- FP.floors.FPL.agg$PovGapSqr*FP.floors.FPL.agg$ReqYearPopulation
FP.floors.FPL.agg <- FP.floors.FPL.agg[,c(2,5,6,7)]
FP.floors.FPL.agg[which(FP.floors.FPL.agg$PovGap.Pop==0)]$ReqYearPopulation <- 0
FP.floors.FPL.agg <- aggregate(FP.floors.FPL.agg, by=list(FP.floors.FPL.agg$RequestYear),FUN=sum)
FP.floors.FPL.agg$PovGap <- FP.floors.FPL.agg$PovGap.Pop/FP.floors.FPL.agg$ReqYearPopulation
FP.floors.FPL.agg$PovGapSqr <- FP.floors.FPL.agg$PovGapSqr.Pop/FP.floors.FPL.agg$ReqYearPopulation
FP.floors.FPL.agg <- FP.floors.FPL.agg[,c(1,6,7)]
FP.floors.FPL.agg$floor <- 1-FP.floors.FPL.agg$PovGapSqr/FP.floors.FPL.agg$PovGap
FP.floors.FPL.agg$floor.cal <- FP.floors.FPL.agg$floor*2100
FP.floors.FPL.agg1 <- FP.floors.FPL.agg
i <- 1
FP.list <- list()
for (i in 1:nrow(PL)){
FP.list[[i]] <- povcal.out.FPL(PL[i,2],year="all",PL=2,PL[i,5])
}
FP.povcal.FPL <- rbindlist(FP.list)
#Calculate national consumption floors based on food poverty lines, both in PPP dollar terms and FPL terms
FP.floors.PPP <- FP.povcal.PPP[,c(4,3,6,7,9,11,13,14,15)]
FP.floors.PPP[which(FP.floors.PPP$CoverageType=="R")]$CountryName <- paste0(FP.floors.PPP[which(FP.floors.PPP$CoverageType=="R")]$CountryName,"--Rural")
FP.floors.PPP[which(FP.floors.PPP$CoverageType=="U")]$CountryName <- paste0(FP.floors.PPP[which(FP.floors.PPP$CoverageType=="U")]$CountryName,"--Urban")
FP.floors.PPP$floor <- FP.floors.PPP$PovertyLine*(1-FP.floors.PPP$PovGapSqr/FP.floors.PPP$PovGap)
FP.floors.PPP <- FP.floors.PPP[,c(1,4,5,10)]
FP.floors.FPL <- FP.povcal.FPL[,c(4,3,6,7,9,11,13,14,15)]
FP.floors.FPL[which(FP.floors.FPL$CoverageType=="R")]$CountryName <- paste0(FP.floors.FPL[which(FP.floors.FPL$CoverageType=="R")]$CountryName,"--Rural")
FP.floors.FPL[which(FP.floors.FPL$CoverageType=="U")]$CountryName <- paste0(FP.floors.FPL[which(FP.floors.FPL$CoverageType=="U")]$CountryName,"--Urban")
FP.floors.FPL$floor <- FP.floors.FPL$PovertyLine*(1-FP.floors.FPL$PovGapSqr/FP.floors.FPL$PovGap)
FP.floors.FPL <- FP.floors.FPL[,c(1,4,5,10)]
FP.floors.FPL$floor.cal <- FP.floors.FPL$floor*2100
FP.floors.FPL.agg <- FP.povcal.FPL[,c(6,7,14,15,21)]
#FP.floors.FPL.agg <- FP.floors.FPL.agg[which(FP.floors.FPL.agg$CoverageType != "A")]
FP.floors.FPL.agg$PovGap.Pop <- FP.floors.FPL.agg$PovGap*FP.floors.FPL.agg$ReqYearPopulation
FP.floors.FPL.agg$PovGapSqr.Pop <- FP.floors.FPL.agg$PovGapSqr*FP.floors.FPL.agg$ReqYearPopulation
FP.floors.FPL.agg <- FP.floors.FPL.agg[,c(2,5,6,7)]
FP.floors.FPL.agg[which(FP.floors.FPL.agg$PovGap.Pop==0)]$ReqYearPopulation <- 0
FP.floors.FPL.agg <- aggregate(FP.floors.FPL.agg, by=list(FP.floors.FPL.agg$RequestYear),FUN=sum)
FP.floors.FPL.agg$PovGap <- FP.floors.FPL.agg$PovGap.Pop/FP.floors.FPL.agg$ReqYearPopulation
FP.floors.FPL.agg$PovGapSqr <- FP.floors.FPL.agg$PovGapSqr.Pop/FP.floors.FPL.agg$ReqYearPopulation
FP.floors.FPL.agg <- FP.floors.FPL.agg[,c(1,6,7)]
FP.floors.FPL.agg$floor <- 1-FP.floors.FPL.agg$PovGapSqr/FP.floors.FPL.agg$PovGap
FP.floors.FPL.agg$floor.cal <- FP.floors.FPL.agg$floor*2100
FP.floors.FPL.agg2 <- FP.floors.FPL.agg
View(FP.floors.FPL.agg1)
View(FP.floors.FPL.agg2)
View(FP.floors.FPL.agg1)
View(FP.floors.FPL.agg2)
FP.floors.FPL <- FP.povcal.FPL[,c(4,3,6,7,9,11,13,14,15)]
FP.floors.FPL[which(FP.floors.FPL$CoverageType=="R")]$CountryName <- paste0(FP.floors.FPL[which(FP.floors.FPL$CoverageType=="R")]$CountryName,"--Rural")
FP.floors.FPL[which(FP.floors.FPL$CoverageType=="U")]$CountryName <- paste0(FP.floors.FPL[which(FP.floors.FPL$CoverageType=="U")]$CountryName,"--Urban")
FP.floors.FPL$floor <- FP.floors.FPL$PovertyLine*(1-FP.floors.FPL$PovGapSqr/FP.floors.FPL$PovGap)
FP.floors.FPL <- FP.floors.FPL[,c(1,4,5,10)]
FP.floors.FPL$floor.cal <- FP.floors.FPL$floor*2100
i <- 1
FP.list <- list()
for (i in 1:nrow(PL)){
FP.list[[i]] <- povcal.out.FPL(PL[i,2],year="all",PL=3,PL[i,5])
}
FP.povcal.FPL <- rbindlist(FP.list)
#Calculate national consumption floors based on food poverty lines, both in PPP dollar terms and FPL terms
FP.floors.PPP <- FP.povcal.PPP[,c(4,3,6,7,9,11,13,14,15)]
FP.floors.PPP[which(FP.floors.PPP$CoverageType=="R")]$CountryName <- paste0(FP.floors.PPP[which(FP.floors.PPP$CoverageType=="R")]$CountryName,"--Rural")
FP.floors.PPP[which(FP.floors.PPP$CoverageType=="U")]$CountryName <- paste0(FP.floors.PPP[which(FP.floors.PPP$CoverageType=="U")]$CountryName,"--Urban")
FP.floors.PPP$floor <- FP.floors.PPP$PovertyLine*(1-FP.floors.PPP$PovGapSqr/FP.floors.PPP$PovGap)
FP.floors.PPP <- FP.floors.PPP[,c(1,4,5,10)]
FP.floors.FPL <- FP.povcal.FPL[,c(4,3,6,7,9,11,13,14,15)]
FP.floors.FPL[which(FP.floors.FPL$CoverageType=="R")]$CountryName <- paste0(FP.floors.FPL[which(FP.floors.FPL$CoverageType=="R")]$CountryName,"--Rural")
FP.floors.FPL[which(FP.floors.FPL$CoverageType=="U")]$CountryName <- paste0(FP.floors.FPL[which(FP.floors.FPL$CoverageType=="U")]$CountryName,"--Urban")
FP.floors.FPL$floor <- FP.floors.FPL$PovertyLine*(1-FP.floors.FPL$PovGapSqr/FP.floors.FPL$PovGap)
FP.floors.FPL <- FP.floors.FPL[,c(1,4,5,10)]
FP.floors.FPL$floor.cal <- FP.floors.FPL$floor*2100
FP.floors.FPL.agg <- FP.povcal.FPL[,c(6,7,14,15,21)]
#FP.floors.FPL.agg <- FP.floors.FPL.agg[which(FP.floors.FPL.agg$CoverageType != "A")]
FP.floors.FPL.agg$PovGap.Pop <- FP.floors.FPL.agg$PovGap*FP.floors.FPL.agg$ReqYearPopulation
FP.floors.FPL.agg$PovGapSqr.Pop <- FP.floors.FPL.agg$PovGapSqr*FP.floors.FPL.agg$ReqYearPopulation
FP.floors.FPL.agg <- FP.floors.FPL.agg[,c(2,5,6,7)]
FP.floors.FPL.agg[which(FP.floors.FPL.agg$PovGap.Pop==0)]$ReqYearPopulation <- 0
FP.floors.FPL.agg <- aggregate(FP.floors.FPL.agg, by=list(FP.floors.FPL.agg$RequestYear),FUN=sum)
FP.floors.FPL.agg$PovGap <- FP.floors.FPL.agg$PovGap.Pop/FP.floors.FPL.agg$ReqYearPopulation
FP.floors.FPL.agg$PovGapSqr <- FP.floors.FPL.agg$PovGapSqr.Pop/FP.floors.FPL.agg$ReqYearPopulation
FP.floors.FPL.agg <- FP.floors.FPL.agg[,c(1,6,7)]
FP.floors.FPL.agg$floor <- 1-FP.floors.FPL.agg$PovGapSqr/FP.floors.FPL.agg$PovGap
FP.floors.FPL.agg$floor.cal <- FP.floors.FPL.agg$floor*2100
FP.floors.FPL.agg3 <- FP.floors.FPL.agg
View(FP.floors.FPL.agg3)
FP.floors.FPL.agg <- FP.povcal.FPL[,c(6,7,14,15,21)]
#FP.floors.FPL.agg <- FP.floors.FPL.agg[which(FP.floors.FPL.agg$CoverageType != "A")]
FP.floors.FPL.agg$PovGap.Pop <- FP.floors.FPL.agg$PovGap*FP.floors.FPL.agg$ReqYearPopulation
FP.floors.FPL.agg$PovGapSqr.Pop <- FP.floors.FPL.agg$PovGapSqr*FP.floors.FPL.agg$ReqYearPopulation
FP.floors.FPL.agg <- FP.floors.FPL.agg[,c(2,5,6,7)]
FP.floors.FPL.agg <- FP.povcal.FPL[,c(6,7,14,15,21)]
View(FP.povcal.FPL)
FP.floors.FPL.agg <- FP.povcal.FPL[,c(6,7,11,14,15,21)]
#FP.floors.FPL.agg <- FP.floors.FPL.agg[which(FP.floors.FPL.agg$CoverageType != "A")]
FP.floors.FPL.agg$PovGap.Pop <- FP.floors.FPL.agg$PovGap*FP.floors.FPL.agg$ReqYearPopulation
FP.floors.FPL.agg$PovGapSqr.Pop <- FP.floors.FPL.agg$PovGapSqr*FP.floors.FPL.agg$ReqYearPopulation
FP.floors.FPL.agg <- FP.floors.FPL.agg[,c(2,3,6,7,8)]
FP.floors.FPL.agg[which(FP.floors.FPL.agg$PovGap.Pop==0)]$ReqYearPopulation <- 0
FP.floors.FPL.agg <- aggregate(FP.floors.FPL.agg, by=list(FP.floors.FPL.agg$RequestYear,FP.floors.FPL.agg$PovertyLine),FUN=sum)
FP.floors.FPL.agg$PovGap <- FP.floors.FPL.agg$PovGap.Pop/FP.floors.FPL.agg$ReqYearPopulation
FP.floors.FPL.agg$PovGapSqr <- FP.floors.FPL.agg$PovGapSqr.Pop/FP.floors.FPL.agg$ReqYearPopulation
FP.floors.FPL.agg <- FP.floors.FPL.agg[,c(1,2,8,9)]
FP.floors.FPL.agg$floor <- FP.floors.FPL.agg$Group.2(1-FP.floors.FPL.agg$PovGapSqr/FP.floors.FPL.agg$PovGap)
FP.floors.FPL.agg$floor <- FP.floors.FPL.agg$Group.2*(1-FP.floors.FPL.agg$PovGapSqr/FP.floors.FPL.agg$PovGap)
FP.floors.FPL.agg$floor.cal <- FP.floors.FPL.agg$floor*2100
FP.floors.FPL.agg.ex.chn <- FP.povcal.FPL[,c(4,6,7,14,15,21)]
FP.floors.FPL.agg.ex.chn <- FP.floors.FPL.agg.ex.chn[which(FP.floors.FPL.agg.ex.chn$CountryName != "China")]
FP.floors.FPL.agg.ex.chn$PovGap.Pop <- FP.floors.FPL.agg.ex.chn$PovGap*FP.floors.FPL.agg.ex.chn$ReqYearPopulation
FP.floors.FPL.agg.ex.chn$PovGapSqr.Pop <- FP.floors.FPL.agg.ex.chn$PovGapSqr*FP.floors.FPL.agg.ex.chn$ReqYearPopulation
FP.floors.FPL.agg.ex.chn <- FP.floors.FPL.agg.ex.chn[,c(2,3,6,7,8)]
FP.floors.FPL.agg.ex.chn[which(FP.floors.FPL.agg.ex.chn$PovGap.Pop==0)]$ReqYearPopulation <- 0
FP.floors.FPL.agg.ex.chn <- aggregate(FP.floors.FPL.agg.ex.chn, by=list(FP.floors.FPL.agg.ex.chn$RequestYear),FUN=sum)
FP.floors.FPL.agg.ex.chn <- FP.povcal.FPL[,c(4,6,7,11,14,15,21)]
FP.floors.FPL.agg.ex.chn <- FP.floors.FPL.agg.ex.chn[which(FP.floors.FPL.agg.ex.chn$CountryName != "China")]
FP.floors.FPL.agg.ex.chn$PovGap.Pop <- FP.floors.FPL.agg.ex.chn$PovGap*FP.floors.FPL.agg.ex.chn$ReqYearPopulation
FP.floors.FPL.agg.ex.chn$PovGapSqr.Pop <- FP.floors.FPL.agg.ex.chn$PovGapSqr*FP.floors.FPL.agg.ex.chn$ReqYearPopulation
View(FP.floors.FPL.agg.ex.chn)
FP.floors.FPL.agg <- FP.floors.FPL.agg[,c(3,4,7,8,9)]
FP.floors.FPL.agg <- FP.povcal.FPL[,c(6,7,11,14,15,21)]
#FP.floors.FPL.agg <- FP.floors.FPL.agg[which(FP.floors.FPL.agg$CoverageType != "A")]
FP.floors.FPL.agg$PovGap.Pop <- FP.floors.FPL.agg$PovGap*FP.floors.FPL.agg$ReqYearPopulation
FP.floors.FPL.agg$PovGapSqr.Pop <- FP.floors.FPL.agg$PovGapSqr*FP.floors.FPL.agg$ReqYearPopulation
FP.floors.FPL.agg.ex.chn <- FP.povcal.FPL[,c(4,6,7,14,15,21)]
FP.floors.FPL.agg.ex.chn <- FP.floors.FPL.agg.ex.chn[which(FP.floors.FPL.agg.ex.chn$CountryName != "China")]
FP.floors.FPL.agg.ex.chn$PovGap.Pop <- FP.floors.FPL.agg.ex.chn$PovGap*FP.floors.FPL.agg.ex.chn$ReqYearPopulation
FP.floors.FPL.agg.ex.chn$PovGapSqr.Pop <- FP.floors.FPL.agg.ex.chn$PovGapSqr*FP.floors.FPL.agg.ex.chn$ReqYearPopulation
FP.floors.FPL.agg.ex.chn <- FP.floors.FPL.agg.ex.chn[,c(3,4,6,7,8)]
FP.floors.FPL.agg.ex.chn[which(FP.floors.FPL.agg.ex.chn$PovGap.Pop==0)]$ReqYearPopulation <- 0
FP.floors.FPL.agg.ex.chn <- aggregate(FP.floors.FPL.agg.ex.chn, by=list(FP.floors.FPL.agg.ex.chn$RequestYear,FP.floors.FPL.agg.ex.chn$PovertyLine),FUN=sum)
View(FP.floors.FPL.agg.ex.chn)
FP.floors.FPL.agg.ex.chn <- FP.povcal.FPL[,c(4,6,7,14,15,21)]
FP.floors.FPL.agg.ex.chn <- FP.povcal.FPL[,c(4,6,7,11,14,15,21)]
FP.floors.FPL.agg.ex.chn <- FP.floors.FPL.agg.ex.chn[which(FP.floors.FPL.agg.ex.chn$CountryName != "China")]
FP.floors.FPL.agg.ex.chn$PovGap.Pop <- FP.floors.FPL.agg.ex.chn$PovGap*FP.floors.FPL.agg.ex.chn$ReqYearPopulation
FP.floors.FPL.agg.ex.chn$PovGapSqr.Pop <- FP.floors.FPL.agg.ex.chn$PovGapSqr*FP.floors.FPL.agg.ex.chn$ReqYearPopulation
FP.floors.FPL.agg.ex.chn <- FP.floors.FPL.agg.ex.chn[,c(3,4,7,8,9)]
FP.floors.FPL.agg.ex.chn[which(FP.floors.FPL.agg.ex.chn$PovGap.Pop==0)]$ReqYearPopulation <- 0
FP.floors.FPL.agg.ex.chn <- aggregate(FP.floors.FPL.agg.ex.chn, by=list(FP.floors.FPL.agg.ex.chn$RequestYear,FP.floors.FPL.agg.ex.chn$PovertyLine),FUN=sum)
FP.floors.FPL.agg.ex.chn$PovGap <- FP.floors.FPL.agg.ex.chn$PovGap.Pop/FP.floors.FPL.agg.ex.chn$ReqYearPopulation
FP.floors.FPL.agg.ex.chn$PovGapSqr <- FP.floors.FPL.agg.ex.chn$PovGapSqr.Pop/FP.floors.FPL.agg.ex.chn$ReqYearPopulation
FP.floors.FPL.agg.ex.chn <- FP.floors.FPL.agg.ex.chn[,c(1,2,8,9)]
FP.floors.FPL.agg.ex.chn$floor <- FP.floors.FPL.agg.ex.chn$Group.2*(1-FP.floors.FPL.agg.ex.chn$PovGapSqr/FP.floors.FPL.agg.ex.chn$PovGap)
FP.floors.FPL.agg.ex.chn$floor.cal <- FP.floors.FPL.agg.ex.chn$floor*2100
FP.floors.FPL.agg <- FP.povcal.FPL[,c(6,7,11,14,15,21)]
#FP.floors.FPL.agg <- FP.floors.FPL.agg[which(FP.floors.FPL.agg$CoverageType != "A")]
FP.floors.FPL.agg$PovGap.Pop <- FP.floors.FPL.agg$PovGap*FP.floors.FPL.agg$ReqYearPopulation
FP.floors.FPL.agg$PovGapSqr.Pop <- FP.floors.FPL.agg$PovGapSqr*FP.floors.FPL.agg$ReqYearPopulation
FP.floors.FPL.agg <- FP.floors.FPL.agg[,c(2,3,6,7,8)]
FP.floors.FPL.agg[which(FP.floors.FPL.agg$PovGap.Pop==0)]$ReqYearPopulation <- 0
FP.floors.FPL.agg <- aggregate(FP.floors.FPL.agg, by=list(FP.floors.FPL.agg$RequestYear,FP.floors.FPL.agg$PovertyLine),FUN=sum)
FP.floors.FPL.agg$PovGap <- FP.floors.FPL.agg$PovGap.Pop/FP.floors.FPL.agg$ReqYearPopulation
FP.floors.FPL.agg$PovGapSqr <- FP.floors.FPL.agg$PovGapSqr.Pop/FP.floors.FPL.agg$ReqYearPopulation
FP.floors.FPL.agg <- FP.floors.FPL.agg[,c(1,2,8,9)]
FP.floors.FPL.agg$floor <- FP.floors.FPL.agg$Group.2*(1-FP.floors.FPL.agg$PovGapSqr/FP.floors.FPL.agg$PovGap)
FP.floors.FPL.agg$floor.cal <- FP.floors.FPL.agg$floor*2100
View(FP.floors.FPL.agg)
i <- 1
FP.list <- list()
for (i in 1:nrow(PL)){
FP.list[[i]] <- povcal.out.FPL(PL[i,2],year="all",PL=2,PL[i,5])
}
FP.povcal.FPL <- rbindlist(FP.list)
FP.floors.FPL <- FP.povcal.FPL[,c(4,3,6,7,9,11,13,14,15)]
FP.floors.FPL[which(FP.floors.FPL$CoverageType=="R")]$CountryName <- paste0(FP.floors.FPL[which(FP.floors.FPL$CoverageType=="R")]$CountryName,"--Rural")
FP.floors.FPL[which(FP.floors.FPL$CoverageType=="U")]$CountryName <- paste0(FP.floors.FPL[which(FP.floors.FPL$CoverageType=="U")]$CountryName,"--Urban")
FP.floors.FPL$floor <- FP.floors.FPL$PovertyLine*(1-FP.floors.FPL$PovGapSqr/FP.floors.FPL$PovGap)
FP.floors.FPL <- FP.floors.FPL[,c(1,4,5,10)]
FP.floors.FPL$floor.cal <- FP.floors.FPL$floor*2100
FP.floors.FPL.agg <- FP.povcal.FPL[,c(6,7,11,14,15,21)]
#FP.floors.FPL.agg <- FP.floors.FPL.agg[which(FP.floors.FPL.agg$CoverageType != "A")]
FP.floors.FPL.agg$PovGap.Pop <- FP.floors.FPL.agg$PovGap*FP.floors.FPL.agg$ReqYearPopulation
FP.floors.FPL.agg$PovGapSqr.Pop <- FP.floors.FPL.agg$PovGapSqr*FP.floors.FPL.agg$ReqYearPopulation
FP.floors.FPL.agg <- FP.floors.FPL.agg[,c(2,3,6,7,8)]
FP.floors.FPL.agg[which(FP.floors.FPL.agg$PovGap.Pop==0)]$ReqYearPopulation <- 0
FP.floors.FPL.agg <- aggregate(FP.floors.FPL.agg, by=list(FP.floors.FPL.agg$RequestYear,FP.floors.FPL.agg$PovertyLine),FUN=sum)
FP.floors.FPL.agg$PovGap <- FP.floors.FPL.agg$PovGap.Pop/FP.floors.FPL.agg$ReqYearPopulation
FP.floors.FPL.agg$PovGapSqr <- FP.floors.FPL.agg$PovGapSqr.Pop/FP.floors.FPL.agg$ReqYearPopulation
FP.floors.FPL.agg <- FP.floors.FPL.agg[,c(1,2,8,9)]
FP.floors.FPL.agg$floor <- FP.floors.FPL.agg$Group.2*(1-FP.floors.FPL.agg$PovGapSqr/FP.floors.FPL.agg$PovGap)
FP.floors.FPL.agg$floor.cal <- FP.floors.FPL.agg$floor*2100
FP.floors.FPL.agg.ex.chn <- FP.povcal.FPL[,c(4,6,7,11,14,15,21)]
FP.floors.FPL.agg.ex.chn <- FP.floors.FPL.agg.ex.chn[which(FP.floors.FPL.agg.ex.chn$CountryName != "China")]
FP.floors.FPL.agg.ex.chn$PovGap.Pop <- FP.floors.FPL.agg.ex.chn$PovGap*FP.floors.FPL.agg.ex.chn$ReqYearPopulation
FP.floors.FPL.agg.ex.chn$PovGapSqr.Pop <- FP.floors.FPL.agg.ex.chn$PovGapSqr*FP.floors.FPL.agg.ex.chn$ReqYearPopulation
FP.floors.FPL.agg.ex.chn <- FP.floors.FPL.agg.ex.chn[,c(3,4,7,8,9)]
FP.floors.FPL.agg.ex.chn[which(FP.floors.FPL.agg.ex.chn$PovGap.Pop==0)]$ReqYearPopulation <- 0
FP.floors.FPL.agg.ex.chn <- aggregate(FP.floors.FPL.agg.ex.chn, by=list(FP.floors.FPL.agg.ex.chn$RequestYear,FP.floors.FPL.agg.ex.chn$PovertyLine),FUN=sum)
FP.floors.FPL.agg.ex.chn$PovGap <- FP.floors.FPL.agg.ex.chn$PovGap.Pop/FP.floors.FPL.agg.ex.chn$ReqYearPopulation
FP.floors.FPL.agg.ex.chn$PovGapSqr <- FP.floors.FPL.agg.ex.chn$PovGapSqr.Pop/FP.floors.FPL.agg.ex.chn$ReqYearPopulation
FP.floors.FPL.agg.ex.chn <- FP.floors.FPL.agg.ex.chn[,c(1,2,8,9)]
FP.floors.FPL.agg.ex.chn$floor <- FP.floors.FPL.agg.ex.chn$Group.2*(1-FP.floors.FPL.agg.ex.chn$PovGapSqr/FP.floors.FPL.agg.ex.chn$PovGap)
FP.floors.FPL.agg.ex.chn$floor.cal <- FP.floors.FPL.agg.ex.chn$floor*2100
View(FP.floors.FPL.agg)
View(FP.floors.FPL.agg2)
View(FP.floors.FPL.agg1)
View(FP.floors.FPL.agg)
View(FP.floors.FPL.agg1)
i <- 1
FP.list <- list()
for (i in 1:nrow(PL)){
FP.list[[i]] <- povcal.out.FPL(PL[i,2],year="all",PL=1,PL[i,5])
}
FP.povcal.FPL <- rbindlist(FP.list)
#Calculate national consumption floors based on food poverty lines, both in PPP dollar terms and FPL terms
FP.floors.PPP <- FP.povcal.PPP[,c(4,3,6,7,9,11,13,14,15)]
FP.floors.PPP[which(FP.floors.PPP$CoverageType=="R")]$CountryName <- paste0(FP.floors.PPP[which(FP.floors.PPP$CoverageType=="R")]$CountryName,"--Rural")
FP.floors.PPP[which(FP.floors.PPP$CoverageType=="U")]$CountryName <- paste0(FP.floors.PPP[which(FP.floors.PPP$CoverageType=="U")]$CountryName,"--Urban")
FP.floors.PPP$floor <- FP.floors.PPP$PovertyLine*(1-FP.floors.PPP$PovGapSqr/FP.floors.PPP$PovGap)
FP.floors.PPP <- FP.floors.PPP[,c(1,4,5,10)]
FP.floors.FPL <- FP.povcal.FPL[,c(4,3,6,7,9,11,13,14,15)]
FP.floors.FPL[which(FP.floors.FPL$CoverageType=="R")]$CountryName <- paste0(FP.floors.FPL[which(FP.floors.FPL$CoverageType=="R")]$CountryName,"--Rural")
FP.floors.FPL[which(FP.floors.FPL$CoverageType=="U")]$CountryName <- paste0(FP.floors.FPL[which(FP.floors.FPL$CoverageType=="U")]$CountryName,"--Urban")
FP.floors.FPL$floor <- FP.floors.FPL$PovertyLine*(1-FP.floors.FPL$PovGapSqr/FP.floors.FPL$PovGap)
FP.floors.FPL <- FP.floors.FPL[,c(1,4,5,10)]
FP.floors.FPL$floor.cal <- FP.floors.FPL$floor*2100
FP.floors.FPL.agg <- FP.povcal.FPL[,c(6,7,11,14,15,21)]
#FP.floors.FPL.agg <- FP.floors.FPL.agg[which(FP.floors.FPL.agg$CoverageType != "A")]
FP.floors.FPL.agg$PovGap.Pop <- FP.floors.FPL.agg$PovGap*FP.floors.FPL.agg$ReqYearPopulation
FP.floors.FPL.agg$PovGapSqr.Pop <- FP.floors.FPL.agg$PovGapSqr*FP.floors.FPL.agg$ReqYearPopulation
FP.floors.FPL.agg <- FP.floors.FPL.agg[,c(2,3,6,7,8)]
FP.floors.FPL.agg[which(FP.floors.FPL.agg$PovGap.Pop==0)]$ReqYearPopulation <- 0
FP.floors.FPL.agg <- aggregate(FP.floors.FPL.agg, by=list(FP.floors.FPL.agg$RequestYear,FP.floors.FPL.agg$PovertyLine),FUN=sum)
FP.floors.FPL.agg$PovGap <- FP.floors.FPL.agg$PovGap.Pop/FP.floors.FPL.agg$ReqYearPopulation
FP.floors.FPL.agg$PovGapSqr <- FP.floors.FPL.agg$PovGapSqr.Pop/FP.floors.FPL.agg$ReqYearPopulation
FP.floors.FPL.agg <- FP.floors.FPL.agg[,c(1,2,8,9)]
FP.floors.FPL.agg$floor <- FP.floors.FPL.agg$Group.2*(1-FP.floors.FPL.agg$PovGapSqr/FP.floors.FPL.agg$PovGap)
FP.floors.FPL.agg$floor.cal <- FP.floors.FPL.agg$floor*2100
FP.floors.FPL.agg.ex.chn <- FP.povcal.FPL[,c(4,6,7,11,14,15,21)]
FP.floors.FPL.agg.ex.chn <- FP.floors.FPL.agg.ex.chn[which(FP.floors.FPL.agg.ex.chn$CountryName != "China")]
FP.floors.FPL.agg.ex.chn$PovGap.Pop <- FP.floors.FPL.agg.ex.chn$PovGap*FP.floors.FPL.agg.ex.chn$ReqYearPopulation
FP.floors.FPL.agg.ex.chn$PovGapSqr.Pop <- FP.floors.FPL.agg.ex.chn$PovGapSqr*FP.floors.FPL.agg.ex.chn$ReqYearPopulation
FP.floors.FPL.agg.ex.chn <- FP.floors.FPL.agg.ex.chn[,c(3,4,7,8,9)]
FP.floors.FPL.agg.ex.chn[which(FP.floors.FPL.agg.ex.chn$PovGap.Pop==0)]$ReqYearPopulation <- 0
FP.floors.FPL.agg.ex.chn <- aggregate(FP.floors.FPL.agg.ex.chn, by=list(FP.floors.FPL.agg.ex.chn$RequestYear,FP.floors.FPL.agg.ex.chn$PovertyLine),FUN=sum)
FP.floors.FPL.agg.ex.chn$PovGap <- FP.floors.FPL.agg.ex.chn$PovGap.Pop/FP.floors.FPL.agg.ex.chn$ReqYearPopulation
FP.floors.FPL.agg.ex.chn$PovGapSqr <- FP.floors.FPL.agg.ex.chn$PovGapSqr.Pop/FP.floors.FPL.agg.ex.chn$ReqYearPopulation
FP.floors.FPL.agg.ex.chn <- FP.floors.FPL.agg.ex.chn[,c(1,2,8,9)]
FP.floors.FPL.agg.ex.chn$floor <- FP.floors.FPL.agg.ex.chn$Group.2*(1-FP.floors.FPL.agg.ex.chn$PovGapSqr/FP.floors.FPL.agg.ex.chn$PovGap)
FP.floors.FPL.agg.ex.chn$floor.cal <- FP.floors.FPL.agg.ex.chn$floor*2100
View(FP.floors.FPL.agg1)
View(FP.floors.FPL.agg2)
FP.floors.FPL.agg2$floor.cal <- FP.floors.FPL.agg2$floor.cal*2
FP.floors.FPL.agg3$floor.cal <- FP.floors.FPL.agg2$floor.cal*3
View(FP.floors.FPL.agg3)
FP.floors.FPL.agg3$floor.cal <- FP.floors.FPL.agg2$floor.cal/3
FP.floors.FPL.agg3$floor.cal <- FP.floors.FPL.agg2$floor.cal*3
i <- 1
FP.list <- list()
for (i in 1:nrow(PL)){
FP.list[[i]] <- povcal.out.FPL(PL[i,2],year="all",PL=3,PL[i,5])
}
FP.povcal.FPL <- rbindlist(FP.list)
FP.floors.PPP <- FP.povcal.PPP[,c(4,3,6,7,9,11,13,14,15)]
FP.floors.PPP[which(FP.floors.PPP$CoverageType=="R")]$CountryName <- paste0(FP.floors.PPP[which(FP.floors.PPP$CoverageType=="R")]$CountryName,"--Rural")
FP.floors.PPP[which(FP.floors.PPP$CoverageType=="U")]$CountryName <- paste0(FP.floors.PPP[which(FP.floors.PPP$CoverageType=="U")]$CountryName,"--Urban")
FP.floors.PPP$floor <- FP.floors.PPP$PovertyLine*(1-FP.floors.PPP$PovGapSqr/FP.floors.PPP$PovGap)
FP.floors.PPP <- FP.floors.PPP[,c(1,4,5,10)]
FP.floors.FPL <- FP.povcal.FPL[,c(4,3,6,7,9,11,13,14,15)]
FP.floors.FPL[which(FP.floors.FPL$CoverageType=="R")]$CountryName <- paste0(FP.floors.FPL[which(FP.floors.FPL$CoverageType=="R")]$CountryName,"--Rural")
FP.floors.FPL[which(FP.floors.FPL$CoverageType=="U")]$CountryName <- paste0(FP.floors.FPL[which(FP.floors.FPL$CoverageType=="U")]$CountryName,"--Urban")
FP.floors.FPL$floor <- FP.floors.FPL$PovertyLine*(1-FP.floors.FPL$PovGapSqr/FP.floors.FPL$PovGap)
FP.floors.FPL <- FP.floors.FPL[,c(1,4,5,10)]
FP.floors.FPL$floor.cal <- FP.floors.FPL$floor*2100
FP.floors.FPL.agg <- FP.povcal.FPL[,c(6,7,11,14,15,21)]
#FP.floors.FPL.agg <- FP.floors.FPL.agg[which(FP.floors.FPL.agg$CoverageType != "A")]
FP.floors.FPL.agg$PovGap.Pop <- FP.floors.FPL.agg$PovGap*FP.floors.FPL.agg$ReqYearPopulation
FP.floors.FPL.agg$PovGapSqr.Pop <- FP.floors.FPL.agg$PovGapSqr*FP.floors.FPL.agg$ReqYearPopulation
FP.floors.FPL.agg <- FP.floors.FPL.agg[,c(2,3,6,7,8)]
FP.floors.FPL.agg[which(FP.floors.FPL.agg$PovGap.Pop==0)]$ReqYearPopulation <- 0
FP.floors.FPL.agg <- aggregate(FP.floors.FPL.agg, by=list(FP.floors.FPL.agg$RequestYear,FP.floors.FPL.agg$PovertyLine),FUN=sum)
FP.floors.FPL.agg$PovGap <- FP.floors.FPL.agg$PovGap.Pop/FP.floors.FPL.agg$ReqYearPopulation
FP.floors.FPL.agg$PovGapSqr <- FP.floors.FPL.agg$PovGapSqr.Pop/FP.floors.FPL.agg$ReqYearPopulation
FP.floors.FPL.agg <- FP.floors.FPL.agg[,c(1,2,8,9)]
FP.floors.FPL.agg$floor <- FP.floors.FPL.agg$Group.2*(1-FP.floors.FPL.agg$PovGapSqr/FP.floors.FPL.agg$PovGap)
FP.floors.FPL.agg$floor.cal <- FP.floors.FPL.agg$floor*2100
FP.floors.FPL.agg.ex.chn <- FP.povcal.FPL[,c(4,6,7,11,14,15,21)]
FP.floors.FPL.agg.ex.chn <- FP.floors.FPL.agg.ex.chn[which(FP.floors.FPL.agg.ex.chn$CountryName != "China")]
FP.floors.FPL.agg.ex.chn$PovGap.Pop <- FP.floors.FPL.agg.ex.chn$PovGap*FP.floors.FPL.agg.ex.chn$ReqYearPopulation
FP.floors.FPL.agg.ex.chn$PovGapSqr.Pop <- FP.floors.FPL.agg.ex.chn$PovGapSqr*FP.floors.FPL.agg.ex.chn$ReqYearPopulation
FP.floors.FPL.agg.ex.chn <- FP.floors.FPL.agg.ex.chn[,c(3,4,7,8,9)]
FP.floors.FPL.agg.ex.chn[which(FP.floors.FPL.agg.ex.chn$PovGap.Pop==0)]$ReqYearPopulation <- 0
FP.floors.FPL.agg.ex.chn <- aggregate(FP.floors.FPL.agg.ex.chn, by=list(FP.floors.FPL.agg.ex.chn$RequestYear,FP.floors.FPL.agg.ex.chn$PovertyLine),FUN=sum)
FP.floors.FPL.agg.ex.chn$PovGap <- FP.floors.FPL.agg.ex.chn$PovGap.Pop/FP.floors.FPL.agg.ex.chn$ReqYearPopulation
FP.floors.FPL.agg.ex.chn$PovGapSqr <- FP.floors.FPL.agg.ex.chn$PovGapSqr.Pop/FP.floors.FPL.agg.ex.chn$ReqYearPopulation
FP.floors.FPL.agg.ex.chn <- FP.floors.FPL.agg.ex.chn[,c(1,2,8,9)]
FP.floors.FPL.agg.ex.chn$floor <- FP.floors.FPL.agg.ex.chn$Group.2*(1-FP.floors.FPL.agg.ex.chn$PovGapSqr/FP.floors.FPL.agg.ex.chn$PovGap)
FP.floors.FPL.agg.ex.chn$floor.cal <- FP.floors.FPL.agg.ex.chn$floor*2100
FP.floors.FPL.agg3 <- FP.floors.FPL.agg
i <- 1
FP.list <- list()
for (i in 1:nrow(PL)){
FP.list[[i]] <- povcal.out.FPL(PL[i,2],year="all",PL=1,PL[i,5])
}
FP.povcal.FPL <- rbindlist(FP.list)
#Calculate national consumption floors based on food poverty lines, both in PPP dollar terms and FPL terms
FP.floors.PPP <- FP.povcal.PPP[,c(4,3,6,7,9,11,13,14,15)]
FP.floors.PPP[which(FP.floors.PPP$CoverageType=="R")]$CountryName <- paste0(FP.floors.PPP[which(FP.floors.PPP$CoverageType=="R")]$CountryName,"--Rural")
FP.floors.PPP[which(FP.floors.PPP$CoverageType=="U")]$CountryName <- paste0(FP.floors.PPP[which(FP.floors.PPP$CoverageType=="U")]$CountryName,"--Urban")
FP.floors.PPP$floor <- FP.floors.PPP$PovertyLine*(1-FP.floors.PPP$PovGapSqr/FP.floors.PPP$PovGap)
FP.floors.PPP <- FP.floors.PPP[,c(1,4,5,10)]
FP.floors.FPL <- FP.povcal.FPL[,c(4,3,6,7,9,11,13,14,15)]
FP.floors.FPL[which(FP.floors.FPL$CoverageType=="R")]$CountryName <- paste0(FP.floors.FPL[which(FP.floors.FPL$CoverageType=="R")]$CountryName,"--Rural")
FP.floors.FPL[which(FP.floors.FPL$CoverageType=="U")]$CountryName <- paste0(FP.floors.FPL[which(FP.floors.FPL$CoverageType=="U")]$CountryName,"--Urban")
FP.floors.FPL$floor <- FP.floors.FPL$PovertyLine*(1-FP.floors.FPL$PovGapSqr/FP.floors.FPL$PovGap)
FP.floors.FPL <- FP.floors.FPL[,c(1,4,5,10)]
FP.floors.FPL$floor.cal <- FP.floors.FPL$floor*2100
FP.floors.FPL.agg <- FP.povcal.FPL[,c(6,7,11,14,15,21)]
#FP.floors.FPL.agg <- FP.floors.FPL.agg[which(FP.floors.FPL.agg$CoverageType != "A")]
FP.floors.FPL.agg$PovGap.Pop <- FP.floors.FPL.agg$PovGap*FP.floors.FPL.agg$ReqYearPopulation
FP.floors.FPL.agg$PovGapSqr.Pop <- FP.floors.FPL.agg$PovGapSqr*FP.floors.FPL.agg$ReqYearPopulation
FP.floors.FPL.agg <- FP.floors.FPL.agg[,c(2,3,6,7,8)]
FP.floors.FPL.agg[which(FP.floors.FPL.agg$PovGap.Pop==0)]$ReqYearPopulation <- 0
FP.floors.FPL.agg <- aggregate(FP.floors.FPL.agg, by=list(FP.floors.FPL.agg$RequestYear,FP.floors.FPL.agg$PovertyLine),FUN=sum)
FP.floors.FPL.agg$PovGap <- FP.floors.FPL.agg$PovGap.Pop/FP.floors.FPL.agg$ReqYearPopulation
FP.floors.FPL.agg$PovGapSqr <- FP.floors.FPL.agg$PovGapSqr.Pop/FP.floors.FPL.agg$ReqYearPopulation
FP.floors.FPL.agg <- FP.floors.FPL.agg[,c(1,2,8,9)]
FP.floors.FPL.agg$floor <- FP.floors.FPL.agg$Group.2*(1-FP.floors.FPL.agg$PovGapSqr/FP.floors.FPL.agg$PovGap)
FP.floors.FPL.agg$floor.cal <- FP.floors.FPL.agg$floor*2100
FP.floors.FPL.agg.ex.chn <- FP.povcal.FPL[,c(4,6,7,11,14,15,21)]
FP.floors.FPL.agg.ex.chn <- FP.floors.FPL.agg.ex.chn[which(FP.floors.FPL.agg.ex.chn$CountryName != "China")]
FP.floors.FPL.agg.ex.chn$PovGap.Pop <- FP.floors.FPL.agg.ex.chn$PovGap*FP.floors.FPL.agg.ex.chn$ReqYearPopulation
FP.floors.FPL.agg.ex.chn$PovGapSqr.Pop <- FP.floors.FPL.agg.ex.chn$PovGapSqr*FP.floors.FPL.agg.ex.chn$ReqYearPopulation
FP.floors.FPL.agg.ex.chn <- FP.floors.FPL.agg.ex.chn[,c(3,4,7,8,9)]
FP.floors.FPL.agg.ex.chn[which(FP.floors.FPL.agg.ex.chn$PovGap.Pop==0)]$ReqYearPopulation <- 0
FP.floors.FPL.agg.ex.chn <- aggregate(FP.floors.FPL.agg.ex.chn, by=list(FP.floors.FPL.agg.ex.chn$RequestYear,FP.floors.FPL.agg.ex.chn$PovertyLine),FUN=sum)
FP.floors.FPL.agg.ex.chn$PovGap <- FP.floors.FPL.agg.ex.chn$PovGap.Pop/FP.floors.FPL.agg.ex.chn$ReqYearPopulation
FP.floors.FPL.agg.ex.chn$PovGapSqr <- FP.floors.FPL.agg.ex.chn$PovGapSqr.Pop/FP.floors.FPL.agg.ex.chn$ReqYearPopulation
FP.floors.FPL.agg.ex.chn <- FP.floors.FPL.agg.ex.chn[,c(1,2,8,9)]
FP.floors.FPL.agg.ex.chn$floor <- FP.floors.FPL.agg.ex.chn$Group.2*(1-FP.floors.FPL.agg.ex.chn$PovGapSqr/FP.floors.FPL.agg.ex.chn$PovGap)
FP.floors.FPL.agg.ex.chn$floor.cal <- FP.floors.FPL.agg.ex.chn$floor*2100
i <- 1
FP.list <- list()
for (i in 1:nrow(PL)){
FP.list[[i]] <- povcal.out.FPL(PL[i,2],year="all",PL=2,PL[i,5])
}
FP.povcal.FPL <- rbindlist(FP.list)
#Calculate national consumption floors based on food poverty lines, both in PPP dollar terms and FPL terms
FP.floors.PPP <- FP.povcal.PPP[,c(4,3,6,7,9,11,13,14,15)]
FP.floors.PPP[which(FP.floors.PPP$CoverageType=="R")]$CountryName <- paste0(FP.floors.PPP[which(FP.floors.PPP$CoverageType=="R")]$CountryName,"--Rural")
FP.floors.PPP[which(FP.floors.PPP$CoverageType=="U")]$CountryName <- paste0(FP.floors.PPP[which(FP.floors.PPP$CoverageType=="U")]$CountryName,"--Urban")
FP.floors.PPP$floor <- FP.floors.PPP$PovertyLine*(1-FP.floors.PPP$PovGapSqr/FP.floors.PPP$PovGap)
FP.floors.PPP <- FP.floors.PPP[,c(1,4,5,10)]
FP.floors.FPL <- FP.povcal.FPL[,c(4,3,6,7,9,11,13,14,15)]
FP.floors.FPL[which(FP.floors.FPL$CoverageType=="R")]$CountryName <- paste0(FP.floors.FPL[which(FP.floors.FPL$CoverageType=="R")]$CountryName,"--Rural")
FP.floors.FPL[which(FP.floors.FPL$CoverageType=="U")]$CountryName <- paste0(FP.floors.FPL[which(FP.floors.FPL$CoverageType=="U")]$CountryName,"--Urban")
FP.floors.FPL$floor <- FP.floors.FPL$PovertyLine*(1-FP.floors.FPL$PovGapSqr/FP.floors.FPL$PovGap)
FP.floors.FPL <- FP.floors.FPL[,c(1,4,5,10)]
FP.floors.FPL$floor.cal <- FP.floors.FPL$floor*2100
FP.floors.FPL.agg <- FP.povcal.FPL[,c(6,7,11,14,15,21)]
#FP.floors.FPL.agg <- FP.floors.FPL.agg[which(FP.floors.FPL.agg$CoverageType != "A")]
FP.floors.FPL.agg$PovGap.Pop <- FP.floors.FPL.agg$PovGap*FP.floors.FPL.agg$ReqYearPopulation
FP.floors.FPL.agg$PovGapSqr.Pop <- FP.floors.FPL.agg$PovGapSqr*FP.floors.FPL.agg$ReqYearPopulation
FP.floors.FPL.agg <- FP.floors.FPL.agg[,c(2,3,6,7,8)]
FP.floors.FPL.agg[which(FP.floors.FPL.agg$PovGap.Pop==0)]$ReqYearPopulation <- 0
FP.floors.FPL.agg <- aggregate(FP.floors.FPL.agg, by=list(FP.floors.FPL.agg$RequestYear,FP.floors.FPL.agg$PovertyLine),FUN=sum)
FP.floors.FPL.agg$PovGap <- FP.floors.FPL.agg$PovGap.Pop/FP.floors.FPL.agg$ReqYearPopulation
FP.floors.FPL.agg$PovGapSqr <- FP.floors.FPL.agg$PovGapSqr.Pop/FP.floors.FPL.agg$ReqYearPopulation
FP.floors.FPL.agg <- FP.floors.FPL.agg[,c(1,2,8,9)]
FP.floors.FPL.agg$floor <- FP.floors.FPL.agg$Group.2*(1-FP.floors.FPL.agg$PovGapSqr/FP.floors.FPL.agg$PovGap)
FP.floors.FPL.agg$floor.cal <- FP.floors.FPL.agg$floor*2100
View(FP.floors.FPL.agg2)
View(FP.floors.FPL.agg2)
FP.floors.FPL.agg2 <- FP.floors.FPL.agg
